WEBVTT
Kind: captions
Language: no
Style:
::cue(c.colorCCCCCC) { color: rgb(204,204,204);
 }
::cue(c.colorE5E5E5) { color: rgb(229,229,229);
 }
##

00:00:04.300 --> 00:00:08.610
 [Musikk] 

00:00:05.930 --> 00:00:12.210
 du ser begge systemene <c.colorE5E5E5>er veldig </c>

00:00:08.610 --> 00:00:14.880
 responsiv Odroid <c.colorCCCCCC>xu4 q til meg </c><c.colorE5E5E5>har </c>

00:00:12.210 --> 00:00:18.029
 mer av <c.colorE5E5E5>det </c><c.colorCCCCCC>minste ut av </c><c.colorE5E5E5>esken </c><c.colorCCCCCC>har </c>

00:00:14.880 --> 00:00:20.550
 mer av en stasjonær <c.colorE5E5E5>datamaskin føler seg til det </c>

00:00:18.029 --> 00:00:21.990
 responsen er som en desktop 

00:00:20.550 --> 00:00:24.380
 <c.colorE5E5E5>datamaskin også, men operasjonen </c>

00:00:21.990 --> 00:00:27.090
 systemet føles veldig stasjonær datamaskin ish 

00:00:24.380 --> 00:00:29.010
 <c.colorCCCCCC>Raspberry </c><c.colorE5E5E5>Pi raspbian har gjort en </c>

00:00:27.090 --> 00:00:33.120
 fantastisk jobb med <c.colorE5E5E5>å få det til å føles på den </c><c.colorCCCCCC>måten </c>

00:00:29.010 --> 00:00:35.340
 <c.colorCCCCCC>også, men det har litt av </c><c.colorE5E5E5>en bit av </c>

00:00:33.120 --> 00:00:37.829
 oss <c.colorE5E5E5>vet jeg </c><c.colorCCCCCC>ikke </c><c.colorE5E5E5>ikke helt en stasjonær følelse </c>

00:00:35.340 --> 00:00:40.410
 til det er det <c.colorE5E5E5>ikke helt så kraftig og det </c>

00:00:37.829 --> 00:00:42.360
 har <c.colorE5E5E5>litt </c><c.colorCCCCCC>ventetid til det så </c>

00:00:40.410 --> 00:00:44.550
 over <c.colorCCCCCC>på </c><c.colorE5E5E5>Raspberry Pi 3 første jeg </c>

00:00:42.360 --> 00:00:48.870
 vil <c.colorE5E5E5>teste er vi kommer til å gå </c>

00:00:44.550 --> 00:00:52.500
 å kjøre en sannsynligvis <c.colorE5E5E5>en 30 sekunders test med </c>

00:00:48.870 --> 00:00:56.039
 stress <c.colorE5E5E5>ng så stress - ng, og vi kommer til å </c>

00:00:52.500 --> 00:01:03.300
 Fortell <c.colorCCCCCC>det </c><c.colorE5E5E5>å bruke alle CPU-kjerner, og vi er </c>

00:00:56.039 --> 00:01:12.299
 skal teste <c.colorCCCCCC>til iOS vi </c><c.colorE5E5E5>skal gjøre virtuelle </c>

00:01:03.300 --> 00:01:16.799
 minne med 1 gig blokker og vi kommer til å 

00:01:12.299 --> 00:01:20.939
 gå i <c.colorE5E5E5>30 sekunder og så </c><c.colorCCCCCC>får vi </c>

00:01:16.799 --> 00:01:22.560
 målinger kort <c.colorE5E5E5>på </c><c.colorCCCCCC>slutten skal </c><c.colorE5E5E5>jeg løpe </c>

00:01:20.939 --> 00:01:24.720
 det og vi skal hoppe over <c.colorE5E5E5>til </c>

00:01:22.560 --> 00:01:29.340
 <c.colorCCCCCC>Odroid xu4 kø og </c><c.colorE5E5E5>vi skal løpe </c>

00:01:24.720 --> 00:01:34.579
 <c.colorE5E5E5>akkurat samme kommando så stress ng - </c>

00:01:29.340 --> 00:01:34.579
 - <c.colorE5E5E5>cpu 0 io </c><c.colorCCCCCC>2 </c>

00:01:43.640 --> 00:01:47.430
 Ok, vi skal la <c.colorCCCCCC>det løpe på </c>

00:01:45.600 --> 00:01:48.600
 Odroid <c.colorE5E5E5>xu4 </c><c.colorCCCCCC>kø hopper tilbake til </c>

00:01:47.430 --> 00:01:52.380
 <c.colorCCCCCC>bringebær pi hvordan ser det ut? </c>

00:01:48.600 --> 00:01:55.310
 <c.colorCCCCCC>har ikke </c><c.colorE5E5E5>vært 30 sekunder, men det går vi </c>

00:01:52.380 --> 00:01:58.520
 <c.colorCCCCCC>ok </c><c.colorE5E5E5>så først og fremst ser vi på </c>

00:01:55.310 --> 00:01:58.520
 <c.colorE5E5E5>BOGO </c><c.colorCCCCCC>ops </c>

00:01:58.760 --> 00:02:04.440
 hvor mange <c.colorCCCCCC>bogle </c><c.colorE5E5E5>ops er det </c>

00:02:01.020 --> 00:02:06.290
 hva er en BOGO op igjen vi får <c.colorCCCCCC>ikke </c>

00:02:04.440 --> 00:02:08.640
 vitenskapelig <c.colorCCCCCC>her BOGO op er en </c><c.colorE5E5E5>falsk </c>

00:02:06.290 --> 00:02:10.979
 operasjon <c.colorE5E5E5>ok i orden </c>

00:02:08.640 --> 00:02:13.680
 så hvor mange falske operasjoner kan <c.colorE5E5E5>disse </c>

00:02:10.979 --> 00:02:16.080
 boards prosess på sine CPUer på deres 

00:02:13.680 --> 00:02:17.130
 iOS <c.colorE5E5E5>og det virtuelle minnet </c><c.colorCCCCCC>som er </c><c.colorE5E5E5>det </c>

00:02:16.080 --> 00:02:19.970
 vi ser <c.colorCCCCCC>på </c><c.colorE5E5E5>så det er ikke en </c>

00:02:17.130 --> 00:02:22.380
 vitenskapelig tall er det bare en 

00:02:19.970 --> 00:02:24.600
 komparativt at vi kan ta to <c.colorE5E5E5>brett </c>

00:02:22.380 --> 00:02:27.660
 side om side og <c.colorE5E5E5>si at du kjenner dem </c>

00:02:24.600 --> 00:02:29.400
 operere <c.colorE5E5E5>med dette mange falske operasjoner </c>

00:02:27.660 --> 00:02:34.050
 per sekund <c.colorE5E5E5>så ser på Raspberry </c>

00:02:29.400 --> 00:02:38.300
 Pi 3 hvor mange <c.colorE5E5E5>BOGO ops </c><c.colorCCCCCC>får vi per </c>

00:02:34.050 --> 00:02:44.940
 andre så ser ut som CPU <c.colorCCCCCC>er ca 20 </c>

00:02:38.300 --> 00:02:48.989
 <c.colorCCCCCC>3.04 og i / o er 23700 </c><c.colorE5E5E5>hopper tilbake </c>

00:02:44.940 --> 00:02:51.209
 <c.colorCCCCCC>over til Odroid xu4 la oss se om vi </c>

00:02:48.989 --> 00:02:52.800
 kan <c.colorE5E5E5>bringe det opp </c><c.colorCCCCCC>en </c><c.colorE5E5E5>litt større </c><c.colorCCCCCC>oh og </c>

00:02:51.209 --> 00:02:57.110
 det <c.colorE5E5E5>viser det pakket inn i det neste </c>

00:02:52.800 --> 00:03:05.540
 linje <c.colorCCCCCC>ok så ser </c><c.colorE5E5E5>på det samme </c>

00:02:57.110 --> 00:03:11.430
 <c.colorCCCCCC>29 poeng </c><c.colorE5E5E5>oh syv for CPU og 53 47 </c>

00:03:05.540 --> 00:03:16.799
 for det <c.colorE5E5E5>er IO </c><c.colorCCCCCC>synk, la oss hoppe tilbake </c>

00:03:11.430 --> 00:03:19.170
 <c.colorCCCCCC>til </c><c.colorE5E5E5>Raspberry Pi Jeg må løpe det igjen </c>

00:03:16.799 --> 00:03:23.190
 <c.colorE5E5E5>fordi det ikke er </c><c.colorCCCCCC>jeg kan ikke jeg ikke kan gjøre </c><c.colorE5E5E5>det </c>

00:03:19.170 --> 00:03:25.830
 <c.colorE5E5E5>side-by-side sammenligning la oss kjøre den </c>

00:03:23.190 --> 00:03:27.930
 igjen <c.colorCCCCCC>samme sak </c><c.colorE5E5E5>nå fordi vi har </c>

00:03:25.830 --> 00:03:32.120
 spesifiserte <c.colorCCCCCC>CPUer null dette </c><c.colorE5E5E5>kommer </c><c.colorCCCCCC>til å bruke </c>

00:03:27.930 --> 00:03:32.120
 <c.colorCCCCCC>åtte kjerner på denne bestemte </c><c.colorE5E5E5>enheten </c>

00:03:36.569 --> 00:03:41.489
 og bare gi oss noen <c.colorCCCCCC>tall til </c>

00:03:38.310 --> 00:03:44.700
 sammenlign <c.colorCCCCCC>oh det er tiden </c><c.colorE5E5E5>det er </c>

00:03:41.489 --> 00:03:46.170
 tid BOGO <c.colorE5E5E5>ops Jeg ser på </c>

00:03:44.700 --> 00:03:52.980
 <c.colorE5E5E5>helt feil kolonne se på </c>

00:03:46.170 --> 00:03:57.420
 <c.colorCCCCCC>venstre </c><c.colorE5E5E5>side </c><c.colorCCCCCC>1906 for </c><c.colorE5E5E5>CPU og </c><c.colorCCCCCC>906 </c>

00:03:52.980 --> 00:04:00.840
 tusen for <c.colorE5E5E5>i / o okay hva gjør </c>

00:03:57.420 --> 00:04:06.540
 vi <c.colorE5E5E5>kom hit fem tusen to hundre </c>

00:04:00.840 --> 00:04:08.549
 og <c.colorE5E5E5>trettifire for CPU </c><c.colorCCCCCC>versus 1906 </c>

00:04:06.540 --> 00:04:12.450
 på Raspberry Pi <c.colorE5E5E5>så vi er omtrent fem </c>

00:04:08.549 --> 00:04:19.789
 ganger <c.colorCCCCCC>Wow </c><c.colorE5E5E5>fire ganger raskere CPU og i / o </c>

00:04:12.450 --> 00:04:22.199
 vask er 129.000 <c.colorCCCCCC>på Odroid </c><c.colorE5E5E5>og igjen </c>

00:04:19.789 --> 00:04:24.810
 <c.colorE5E5E5>hvordan </c><c.colorCCCCCC>syntes </c><c.colorE5E5E5>det at </c><c.colorCCCCCC>det var ni </c>

00:04:22.199 --> 00:04:27.720
 hundre <c.colorE5E5E5>og seks tusen selv om dette </c>

00:04:24.810 --> 00:04:30.600
 er et <c.colorE5E5E5>annet syn på synk versus i / o </c>

00:04:27.720 --> 00:04:33.060
 <c.colorE5E5E5>de er ikke den samme testen og vi vil ha </c>

00:04:30.600 --> 00:04:35.449
 <c.colorE5E5E5>alt for å være nøyaktig </c><c.colorCCCCCC>side om side </c>

00:04:33.060 --> 00:04:38.100
 sammenlignbare, men vi kan ikke sammenligne <c.colorE5E5E5>det </c>

00:04:35.449 --> 00:04:40.169
 <c.colorE5E5E5>verdi fordi de ikke er </c><c.colorCCCCCC>sammenlignbare </c>

00:04:38.100 --> 00:04:42.599
 verdi <c.colorE5E5E5>som kan være en versjon av stress </c>

00:04:40.169 --> 00:04:45.180
 <c.colorCCCCCC>energi som gir oss en liten bit </c><c.colorE5E5E5>av </c>

00:04:42.599 --> 00:04:48.060
 <c.colorCCCCCC>en off-putting verdi slik at vi skal se </c>

00:04:45.180 --> 00:04:53.280
 på bare CPU hvor CPU på 

00:04:48.060 --> 00:04:56.250
 Raspberry Pi <c.colorE5E5E5>er sammenlignbar på en 906 til </c>

00:04:53.280 --> 00:04:59.699
 verdien av <c.colorE5E5E5>fem to tre fire </c><c.colorCCCCCC>på </c>

00:04:56.250 --> 00:05:01.680
 Odroid <c.colorCCCCCC>X u4q så igjen ikke vitenskapelig men </c>

00:04:59.699 --> 00:05:04.620
 det gir oss <c.colorE5E5E5>en ide om at det handler om fire </c>

00:05:01.680 --> 00:05:07.800
 ganger <c.colorCCCCCC>raskere </c><c.colorE5E5E5>bare i denne falske </c>

00:05:04.620 --> 00:05:10.169
 opererer <c.colorE5E5E5>i / o-ting </c><c.colorCCCCCC>de </c><c.colorE5E5E5>ikke er en </c>

00:05:07.800 --> 00:05:12.949
 sammenlign sammenlignende side ved side så vi 

00:05:10.169 --> 00:05:16.169
 kan ikke bruke det <c.colorCCCCCC>nummeret men CPU handler om </c>

00:05:12.949 --> 00:05:18.539
 fire <c.colorCCCCCC>ganger raskere, ok å hoppe tilbake til </c>

00:05:16.169 --> 00:05:22.349
 Raspberry Pi la oss teste nettverket 

00:05:18.539 --> 00:05:24.090
 grensesnitt nå jeg har en CL 100 fra 

00:05:22.349 --> 00:05:27.690
 logikkforsyning koblet til det samme 

00:05:24.090 --> 00:05:31.139
 <c.colorCCCCCC>Gigabit Ethernet-bryter som begge disse </c>

00:05:27.690 --> 00:05:34.560
 <c.colorE5E5E5>enheter som kjører iperf som en server </c>

00:05:31.139 --> 00:05:36.060
 <c.colorCCCCCC>Det betyr at jeg i utgangspunktet kan </c><c.colorE5E5E5>sende pakker </c>

00:05:34.560 --> 00:05:39.120
 til det og motta dem tilbake og det <c.colorE5E5E5>vil </c>

00:05:36.060 --> 00:05:41.220
 gi <c.colorE5E5E5>meg et referanse til nettverket mitt </c>

00:05:39.120 --> 00:05:42.930
 <c.colorE5E5E5>Hastighet ok, så du må </c><c.colorCCCCCC>ha </c><c.colorE5E5E5>en </c>

00:05:41.220 --> 00:05:44.460
 mottar server i den andre <c.colorE5E5E5>enden og den </c>

00:05:42.930 --> 00:05:47.460
 <c.colorE5E5E5>må </c><c.colorCCCCCC>kobles </c><c.colorE5E5E5>til en gigabit-bryter </c>

00:05:44.460 --> 00:05:48.910
 <c.colorE5E5E5>så på Raspberry Pi 3 la oss skrive </c>

00:05:47.460 --> 00:05:52.900
 <c.colorE5E5E5>Iperf </c>

00:05:48.910 --> 00:05:56.380
 - se <c.colorE5E5E5>og IP-adressen til den iperf </c>

00:05:52.900 --> 00:05:58.750
 server som er 192.168.0.1 <c.colorCCCCCC>o1 </c><c.colorE5E5E5>vi er </c>

00:05:56.380 --> 00:06:01.120
 skal kjøre <c.colorCCCCCC>ti samtidige tilkoblinger </c>

00:05:58.750 --> 00:06:04.090
 og vi skal kjøre <c.colorE5E5E5>den i 30 sekunder </c>

00:06:01.120 --> 00:06:06.880
 <c.colorE5E5E5>der går vi nå over </c><c.colorCCCCCC>her </c><c.colorE5E5E5>på den andre </c>

00:06:04.090 --> 00:06:12.270
 enheter som Odroid <c.colorCCCCCC>xu4-køen </c><c.colorE5E5E5>lar oss kjøre </c>

00:06:06.880 --> 00:06:17.500
 at nøyaktig samme kommando <c.colorCCCCCC>jeg </c><c.colorE5E5E5>perf </c><c.colorCCCCCC>- </c><c.colorE5E5E5>se </c>

00:06:12.270 --> 00:06:19.090
 192.168.0.1 <c.colorCCCCCC>o 1 - </c><c.colorE5E5E5>p 10 - t 30 og legge merke til </c>

00:06:17.500 --> 00:06:21.220
 <c.colorCCCCCC>Jeg kommer ikke </c><c.colorE5E5E5>til å </c><c.colorCCCCCC>trykke enter </c><c.colorE5E5E5>før </c>

00:06:19.090 --> 00:06:23.320
 <c.colorCCCCCC>bringebær pi </c><c.colorE5E5E5>er ferdig fordi det </c>

00:06:21.220 --> 00:06:26.290
 ville være et urettferdig referanse på <c.colorCCCCCC>grunn av </c>

00:06:23.320 --> 00:06:28.600
 Selvfølgelig er dette en <c.colorCCCCCC>allerede </c><c.colorE5E5E5>bruker </c>

00:06:26.290 --> 00:06:29.400
 båndbredde så vi må gjøre dette på a 

00:06:28.600 --> 00:06:32.200
 tid 

00:06:29.400 --> 00:06:34.210
 bringebær pi burde være <c.colorE5E5E5>innpakning der oppe </c>

00:06:32.200 --> 00:06:36.460
 vi går <c.colorCCCCCC>jeg kommer til å </c><c.colorE5E5E5>slå inn </c><c.colorCCCCCC>på </c><c.colorE5E5E5>den andre </c>

00:06:34.210 --> 00:06:40.540
 enhet her og la det <c.colorE5E5E5>løpe mens vi </c>

00:06:36.460 --> 00:06:42.280
 <c.colorE5E5E5>se på disse spesifikasjonene så i så fall </c>

00:06:40.540 --> 00:06:45.220
 i utgangspunktet det vi ser <c.colorE5E5E5>er det </c>

00:06:42.280 --> 00:06:46.960
 båndbredde <c.colorE5E5E5>megabits per sekund </c><c.colorCCCCCC>på alle 10 </c>

00:06:45.220 --> 00:06:49.930
 tilkoblinger og deretter sammendraget på 

00:06:46.960 --> 00:06:52.660
 <c.colorCCCCCC>slutt som er et gjennomsnitt over 30 sekunder </c>

00:06:49.930 --> 00:06:55.870
 så vi <c.colorE5E5E5>får nittifire punkt </c><c.colorCCCCCC>to </c>

00:06:52.660 --> 00:06:58.360
 megabits <c.colorE5E5E5>per sekund nå med 100 </c>

00:06:55.870 --> 00:07:00.820
 megabit Ethernet adapter i en <c.colorCCCCCC>Raspberry </c>

00:06:58.360 --> 00:07:04.750
 <c.colorCCCCCC>Pi </c><c.colorE5E5E5>3 som er ganske betydelig det er 92 </c>

00:07:00.820 --> 00:07:07.110
 <c.colorE5E5E5>prosent av sin samlede lovede hastighet er </c>

00:07:04.750 --> 00:07:11.350
 blir <c.colorCCCCCC>oppnådd, så det er ganske bra </c>

00:07:07.110 --> 00:07:16.420
 <c.colorE5E5E5>hopper </c><c.colorCCCCCC>over til </c><c.colorE5E5E5>den gamle Droid X u4q den </c>

00:07:11.350 --> 00:07:18.730
 gjennomsnittlig er 926 megabitt per sekund så 

00:07:16.420 --> 00:07:22.090
 igjen får vi <c.colorCCCCCC>ca </c><c.colorE5E5E5>92% </c><c.colorCCCCCC>av </c>

00:07:18.730 --> 00:07:26.320
 lovet <c.colorE5E5E5>hastighet, </c><c.colorCCCCCC>men i dette </c><c.colorE5E5E5>tilfellet har vi </c>

00:07:22.090 --> 00:07:29.440
 <c.colorE5E5E5>Gigabit Ethernet </c><c.colorCCCCCC>så hastigheten på </c>

00:07:26.320 --> 00:07:34.450
 Ethernet-tilkobling <c.colorCCCCCC>er omtrent </c><c.colorE5E5E5>10 ganger </c>

00:07:29.440 --> 00:07:37.030
 raskere på <c.colorE5E5E5>Odroid </c><c.colorCCCCCC>X u4q deretter på </c>

00:07:34.450 --> 00:07:38.730
 Raspberry Pi 3 så hvis du bruker dette 

00:07:37.030 --> 00:07:41.290
 <c.colorCCCCCC>for en server hvis du </c><c.colorE5E5E5>bruker dette til </c>

00:07:38.730 --> 00:07:43.510
 som å kjøre en eske eller <c.colorE5E5E5>noe som helst </c>

00:07:41.290 --> 00:07:46.060
 at <c.colorE5E5E5>dette definitivt kommer til å bli den </c>

00:07:43.510 --> 00:07:47.610
 PI dreper sikkert <c.colorE5E5E5>så langt som det går </c>

00:07:46.060 --> 00:07:50.500
 <c.colorE5E5E5>En annen grunn til at du vil ha </c><c.colorCCCCCC>det </c>

00:07:47.610 --> 00:07:52.240
 raskere nettverkstilkobling <c.colorE5E5E5>Plex-servere </c>

00:07:50.500 --> 00:07:54.850
 <c.colorCCCCCC>mm-hmm hvis du vil gjøre </c><c.colorE5E5E5>multimedia </c>

00:07:52.240 --> 00:07:56.950
 streaming <c.colorCCCCCC>den slags ting som er mye </c>

00:07:54.850 --> 00:07:58.690
 mye <c.colorE5E5E5>raskere </c><c.colorCCCCCC>den endelige </c><c.colorE5E5E5>testen at vi er </c>

00:07:56.950 --> 00:08:01.360
 Skal gjøre her Becca <c.colorE5E5E5>fordi </c><c.colorCCCCCC>jeg vet dette </c>

00:07:58.690 --> 00:08:02.150
 <c.colorE5E5E5>løper inn i geekeryet utover </c>

00:08:01.360 --> 00:08:04.310
 måle 

00:08:02.150 --> 00:08:07.490
 men vi måler <c.colorCCCCCC>det ikke bekymre deg </c>

00:08:04.310 --> 00:08:09.670
 Geekery er høy med dette en <c.colorCCCCCC>okay så videre </c>

00:08:07.490 --> 00:08:13.700
 hvert av <c.colorCCCCCC>disse </c><c.colorE5E5E5>systemene jeg har installert </c>

00:08:09.670 --> 00:08:18.590
 <c.colorCCCCCC>cat5 tv gruvearbeidere kan </c><c.colorE5E5E5>du finne det på vår </c>

00:08:13.700 --> 00:08:22.940
 github cap cap <c.colorCCCCCC>5 </c><c.colorE5E5E5>TV på github </c><c.colorCCCCCC>det er en </c>

00:08:18.590 --> 00:08:25.370
 <c.colorCCCCCC>søknad kalt </c><c.colorE5E5E5>cap 5 TV - miners og </c>

00:08:22.940 --> 00:08:28.070
 vi skal min <c.colorCCCCCC>monaro </c><c.colorE5E5E5>med hver av </c>

00:08:25.370 --> 00:08:29.750
 disse brettene, <c.colorE5E5E5>så la oss se hvor mange </c>

00:08:28.070 --> 00:08:32.420
 hashes per sekund hver av disse kan gjøre 

00:08:29.750 --> 00:08:35.480
 så på hvert system <c.colorE5E5E5>har jeg det allerede </c>

00:08:32.420 --> 00:08:37.070
 <c.colorCCCCCC>installert dette </c><c.colorE5E5E5>er Raspberry Pi 3 jeg er </c>

00:08:35.480 --> 00:08:40.280
 vil la det <c.colorE5E5E5>forbinde og </c><c.colorCCCCCC>få et par </c>

00:08:37.070 --> 00:08:42.230
 av jobber <c.colorE5E5E5>fra bassenget </c><c.colorCCCCCC>og </c><c.colorE5E5E5>over her på </c>

00:08:40.280 --> 00:08:43.690
 Odroid xu4 vi skal gjøre det samme 

00:08:42.230 --> 00:08:47.480
 <c.colorE5E5E5>ting </c>

00:08:43.690 --> 00:08:49.760
 <c.colorCCCCCC>miniro </c><c.colorE5E5E5>og vi skal la det koble til </c>

00:08:47.480 --> 00:08:51.860
 <c.colorE5E5E5>og ta tak </c><c.colorCCCCCC>i bassenget nå </c><c.colorE5E5E5>ser det ut </c>

00:08:49.760 --> 00:08:54.440
 de <c.colorE5E5E5>knytter begge til hashhvelv </c>

00:08:51.860 --> 00:08:57.320
 <c.colorE5E5E5>ja så vi har det samme bassenget </c><c.colorCCCCCC>vi har </c>

00:08:54.440 --> 00:08:59.330
 fikk samme <c.colorCCCCCC>søknad det samme </c>

00:08:57.320 --> 00:09:01.790
 versjon <c.colorE5E5E5>alt er akkurat </c><c.colorCCCCCC>det samme </c>

00:08:59.330 --> 00:09:03.440
 mellom <c.colorE5E5E5>dem </c><c.colorCCCCCC>bare </c><c.colorE5E5E5>forskjellig maskinvare </c><c.colorCCCCCC>så </c>

00:09:01.790 --> 00:09:06.050
 dette er <c.colorCCCCCC>bringebær pi </c><c.colorE5E5E5>3 vi har to </c>

00:09:03.440 --> 00:09:09.560
 jobber ser ut som <c.colorE5E5E5>jeg bare venter på noen </c>

00:09:06.050 --> 00:09:12.230
 hashes per sekund skal rapporteres <c.colorE5E5E5>samme </c>

00:09:09.560 --> 00:09:14.120
 med Odroid <c.colorCCCCCC>xu4 køen venter bare </c>

00:09:12.230 --> 00:09:15.650
 <c.colorCCCCCC>for noen form for rapport </c><c.colorE5E5E5>så langt som hvordan </c>

00:09:14.120 --> 00:09:19.630
 mange hash per sekund vi får 

00:09:15.650 --> 00:09:19.630
 dette kan <c.colorE5E5E5>ta et par øyeblikk </c>

00:09:20.170 --> 00:09:25.130
 Vi benytter denne muligheten bare <c.colorCCCCCC>til </c>

00:09:22.490 --> 00:09:27.410
 nevne <c.colorE5E5E5>litt </c><c.colorCCCCCC>om </c><c.colorE5E5E5>cap 5 </c><c.colorCCCCCC>TV - </c>

00:09:25.130 --> 00:09:30.410
 <c.colorE5E5E5>gruvearbeidere som er en kul måte </c><c.colorCCCCCC>du kan </c>

00:09:27.410 --> 00:09:31.880
 støtte <c.colorE5E5E5>kategori 5 TV-nettverk </c><c.colorCCCCCC>fordi </c>

00:09:30.410 --> 00:09:34.940
 Du kan installere dette på <c.colorCCCCCC>datamaskinen din </c>

00:09:31.880 --> 00:09:37.250
 din SBC på hva som helst <c.colorE5E5E5>og når du ikke er det </c>

00:09:34.940 --> 00:09:40.490
 <c.colorE5E5E5>ved hjelp av disse </c><c.colorCCCCCC>enhetene vil det min monaro </c>

00:09:37.250 --> 00:09:42.320
 og legg det til kategori 5 TV <c.colorE5E5E5>så det er </c>

00:09:40.490 --> 00:09:44.450
 en veldig <c.colorCCCCCC>interessant måte for deg å </c><c.colorE5E5E5>være </c>

00:09:42.320 --> 00:09:46.730
 kan <c.colorE5E5E5>støtte showene her på </c>

00:09:44.450 --> 00:09:49.670
 kategori 5 mens ikke <c.colorE5E5E5>egentlig bruke </c>

00:09:46.730 --> 00:09:52.640
 alt <c.colorE5E5E5>annet enn å bare bruke din </c>

00:09:49.670 --> 00:09:54.680
 maskinvare og og muligens elektrisitet 

00:09:52.640 --> 00:09:56.180
 <c.colorE5E5E5>du vet kanskje støt opp </c><c.colorCCCCCC>strømmen </c>

00:09:54.680 --> 00:09:59.150
 regning <c.colorE5E5E5>litt hvis </c><c.colorCCCCCC>du er hvis du har </c>

00:09:56.180 --> 00:10:01.430
 fikk en <c.colorCCCCCC>supercomputer og det ville ta en </c>

00:09:59.150 --> 00:10:02.780
 Veldig <c.colorCCCCCC>mektig </c><c.colorE5E5E5>med SBC er det ikke </c>

00:10:01.430 --> 00:10:04.790
 kommer til å bli et problem <c.colorCCCCCC>du </c><c.colorE5E5E5>ikke kommer til å være </c>

00:10:02.780 --> 00:10:07.420
 <c.colorE5E5E5>løper mye så det er Raspberry </c>

00:10:04.790 --> 00:10:10.640
 <c.colorE5E5E5>Pi vi får 8,2 hashes per sekund </c>

00:10:07.420 --> 00:10:13.970
 8.2 hashes per sekund er det ikke <c.colorE5E5E5>høyt </c><c.colorCCCCCC>men </c>

00:10:10.640 --> 00:10:15.980
 Det er noe over på <c.colorE5E5E5>Odroid </c><c.colorCCCCCC>x u4q </c>

00:10:13.970 --> 00:10:18.680
 vi får <c.colorCCCCCC>20 </c>

00:10:15.980 --> 00:10:22.880
 <c.colorCCCCCC>Fem punkt syv hashes per sekund igjen </c>

00:10:18.680 --> 00:10:24.710
 <c.colorCCCCCC>et betydelig hopp </c><c.colorE5E5E5>i ytelse når </c>

00:10:22.880 --> 00:10:26.240
 <c.colorE5E5E5>det kommer til å </c><c.colorCCCCCC>overskrive </c><c.colorE5E5E5>Xu for Q </c><c.colorCCCCCC>så hvis </c>

00:10:24.710 --> 00:10:27.260
 du så <c.colorE5E5E5>på å bruke et </c><c.colorCCCCCC>SPC for </c>

00:10:26.240 --> 00:10:29.450
 <c.colorCCCCCC>gruvedrift </c>

00:10:27.260 --> 00:10:31.250
 Dette er CPU-gruvedrift gitt <c.colorE5E5E5>slik at vi ikke er det </c>

00:10:29.450 --> 00:10:33.710
 bruker <c.colorE5E5E5>GPU mining her fordi </c>

00:10:31.250 --> 00:10:35.750
 Raspberry Pi 3 ville bare ikke kunne 

00:10:33.710 --> 00:10:38.150
 <c.colorE5E5E5>håndter det så med CPU mining vi er </c>

00:10:35.750 --> 00:10:43.190
 Få <c.colorE5E5E5>rundt </c><c.colorCCCCCC>8 på Raspberry Pi 3 </c>

00:10:38.150 --> 00:10:46.700
 <c.colorE5E5E5>og om 23 sa jeg på Xu for 25 </c>

00:10:43.190 --> 00:10:50.630
 nesten <c.colorE5E5E5>26 og det er Raspberry Pi 3 </c>

00:10:46.700 --> 00:10:54.410
 Det er gått ned til <c.colorCCCCCC>77,7 Odroid er </c>

00:10:50.630 --> 00:10:57.470
 holder sin egen 24,7 <c.colorE5E5E5>så definitivt </c>

00:10:54.410 --> 00:11:00.690
 <c.colorE5E5E5>får bedre hash priser på det </c>

00:10:57.470 --> 00:11:00.690
 [Musikk] 

00:11:02.649 --> 00:11:07.420
 du 

00:11:03.730 --> 00:11:09.500
 [Musikk] 

00:11:07.420 --> 00:11:13.049
 [Bifall] 

00:11:09.500 --> 00:11:13.049
 [Musikk] 

00:11:15.900 --> 00:11:19.510
 [Musikk] 

