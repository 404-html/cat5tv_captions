WEBVTT
Kind: captions
Language: da
Style:
::cue(c.colorCCCCCC) { color: rgb(204,204,204);
 }
::cue(c.colorE5E5E5) { color: rgb(229,229,229);
 }
##

00:00:04.300 --> 00:00:08.610
 [Musik] 

00:00:05.930 --> 00:00:12.210
 du ser begge systemer <c.colorE5E5E5>er meget </c>

00:00:08.610 --> 00:00:14.880
 responsiv Odroid <c.colorCCCCCC>xu4 q til mig </c><c.colorE5E5E5>har </c>

00:00:12.210 --> 00:00:18.029
 mere af <c.colorE5E5E5>den </c><c.colorCCCCCC>mindst ud af </c><c.colorE5E5E5>kassen </c><c.colorCCCCCC>har </c>

00:00:14.880 --> 00:00:20.550
 mere af en stationær <c.colorE5E5E5>computer føler det </c>

00:00:18.029 --> 00:00:21.990
 Responsen er, er som et skrivebord 

00:00:20.550 --> 00:00:24.380
 <c.colorE5E5E5>computer såvel som driften </c>

00:00:21.990 --> 00:00:27.090
 Systemet føles meget stationær computer ish 

00:00:24.380 --> 00:00:29.010
 <c.colorCCCCCC>Hindbær </c><c.colorE5E5E5>Pi raspbian har gjort en </c>

00:00:27.090 --> 00:00:33.120
 fantastisk arbejde med at <c.colorE5E5E5>få det til at føle den </c><c.colorCCCCCC>måde </c>

00:00:29.010 --> 00:00:35.340
 <c.colorCCCCCC>så godt, men det har lidt af </c><c.colorE5E5E5>en smule </c>

00:00:33.120 --> 00:00:37.829
 os Jeg <c.colorCCCCCC>ved </c><c.colorE5E5E5>ikke, ikke helt en desktop fornemmelse </c>

00:00:35.340 --> 00:00:40.410
 til det er det <c.colorE5E5E5>ikke helt så magtfuldt og det </c>

00:00:37.829 --> 00:00:42.360
 har en lille <c.colorCCCCCC>smule </c><c.colorE5E5E5>af </c><c.colorCCCCCC>latens til det, så </c>

00:00:40.410 --> 00:00:44.550
 over <c.colorCCCCCC>på </c><c.colorE5E5E5>Raspberry Pi 3 første ting jeg </c>

00:00:42.360 --> 00:00:48.870
 vil <c.colorE5E5E5>teste er, vi skal vi går </c>

00:00:44.550 --> 00:00:52.500
 at køre en sandsynligvis <c.colorE5E5E5>en 30 sekunders test ved hjælp af </c>

00:00:48.870 --> 00:00:56.039
 stress <c.colorE5E5E5>ng så stress - ng og vi kommer </c>

00:00:52.500 --> 00:01:03.300
 fortæl <c.colorCCCCCC>det om </c><c.colorE5E5E5>at bruge alle CPU kerner, og vi er </c>

00:00:56.039 --> 00:01:12.299
 vil teste <c.colorCCCCCC>til iOS vi </c><c.colorE5E5E5>skal gøre virtuelle </c>

00:01:03.300 --> 00:01:16.799
 hukommelse med 1 gig-blokke, og vi kommer 

00:01:12.299 --> 00:01:20.939
 gå i <c.colorE5E5E5>30 sekunder og så </c><c.colorCCCCCC>får vi den </c>

00:01:16.799 --> 00:01:22.560
 Metrics kort <c.colorE5E5E5>i </c><c.colorCCCCCC>slutningen vil </c><c.colorE5E5E5>jeg løbe </c>

00:01:20.939 --> 00:01:24.720
 det og vi skal hoppe over <c.colorE5E5E5>til </c>

00:01:22.560 --> 00:01:29.340
 <c.colorCCCCCC>Odroid xu4 kø, og </c><c.colorE5E5E5>vi skal løbe </c>

00:01:24.720 --> 00:01:34.579
 <c.colorE5E5E5>nøjagtig samme kommando så stress ng - </c>

00:01:29.340 --> 00:01:34.579
 - <c.colorE5E5E5>cpu 0 io </c><c.colorCCCCCC>2 </c>

00:01:43.640 --> 00:01:47.430
 okay, vi vil lade <c.colorCCCCCC>det løbe på </c>

00:01:45.600 --> 00:01:48.600
 Odroid <c.colorE5E5E5>xu4 </c><c.colorCCCCCC>kø hopper tilbage til </c>

00:01:47.430 --> 00:01:52.380
 <c.colorCCCCCC>hindbær pi hvordan ser det ud </c>

00:01:48.600 --> 00:01:55.310
 <c.colorCCCCCC>har ikke </c><c.colorE5E5E5>været 30 sekunder, men der går vi </c>

00:01:52.380 --> 00:01:58.520
 <c.colorCCCCCC>okay </c><c.colorE5E5E5>først og fremmest ser vi på </c>

00:01:55.310 --> 00:01:58.520
 <c.colorE5E5E5>BOGO </c><c.colorCCCCCC>ops </c>

00:01:58.760 --> 00:02:04.440
 hvor mange <c.colorCCCCCC>Bogle </c><c.colorE5E5E5>ops er det </c>

00:02:01.020 --> 00:02:06.290
 Hvad er en BOGO op igen, vi får <c.colorCCCCCC>ikke </c>

00:02:04.440 --> 00:02:08.640
 videnskabelig <c.colorCCCCCC>her BOGO op er en </c><c.colorE5E5E5>falsk </c>

00:02:06.290 --> 00:02:10.979
 operation <c.colorE5E5E5>okay okay </c>

00:02:08.640 --> 00:02:13.680
 så hvor mange falske operationer kan <c.colorE5E5E5>disse </c>

00:02:10.979 --> 00:02:16.080
 boards behandler deres CPU'er på deres 

00:02:13.680 --> 00:02:17.130
 iOS <c.colorE5E5E5>og den virtuelle hukommelse </c><c.colorCCCCCC>er </c><c.colorE5E5E5>det </c>

00:02:16.080 --> 00:02:19.970
 vi kigger <c.colorCCCCCC>på </c><c.colorE5E5E5>så det er ikke en </c>

00:02:17.130 --> 00:02:22.380
 videnskabeligt tal er det simpelthen en 

00:02:19.970 --> 00:02:24.600
 komparativt at vi kan tage to <c.colorE5E5E5>brædder </c>

00:02:22.380 --> 00:02:27.660
 side om side og sig <c.colorE5E5E5>at du kender dem </c>

00:02:24.600 --> 00:02:29.400
 operere <c.colorE5E5E5>med denne mange falske operationer </c>

00:02:27.660 --> 00:02:34.050
 per sekund <c.colorE5E5E5>så kigge på hindbær </c>

00:02:29.400 --> 00:02:38.300
 Pi 3 hvor mange <c.colorE5E5E5>BOGO ops </c><c.colorCCCCCC>får vi per </c>

00:02:34.050 --> 00:02:44.940
 Andet ser ud som om CPU <c.colorCCCCCC>er omkring 20 </c>

00:02:38.300 --> 00:02:48.989
 <c.colorCCCCCC>3.04 og i / o er 23700 </c><c.colorE5E5E5>springende tilbage </c>

00:02:44.940 --> 00:02:51.209
 <c.colorCCCCCC>over til Odroid xu4 lad os se om vi </c>

00:02:48.989 --> 00:02:52.800
 kan <c.colorE5E5E5>bringe det op </c><c.colorCCCCCC>lidt</c><c.colorE5E5E5> større </c><c.colorCCCCCC>oh og </c>

00:02:51.209 --> 00:02:57.110
 det <c.colorE5E5E5>viser det indpakket det til det næste </c>

00:02:52.800 --> 00:03:05.540
 linje <c.colorCCCCCC>okay så ser </c><c.colorE5E5E5>på det samme </c>

00:02:57.110 --> 00:03:11.430
 <c.colorCCCCCC>29 point </c><c.colorE5E5E5>oh syv for CPU og 53 47 </c>

00:03:05.540 --> 00:03:16.799
 for det <c.colorE5E5E5>er IO </c><c.colorCCCCCC>sink lad os hoppe tilbage </c>

00:03:11.430 --> 00:03:19.170
 <c.colorCCCCCC>til </c><c.colorE5E5E5>Raspberry Pi Jeg må løbe det igen </c>

00:03:16.799 --> 00:03:23.190
 <c.colorE5E5E5>fordi det ikke er </c><c.colorCCCCCC>jeg kan ikke jeg ikke kan gøre </c><c.colorE5E5E5>det </c>

00:03:19.170 --> 00:03:25.830
 <c.colorE5E5E5>side-by-side sammenligning lad os køre det </c>

00:03:23.190 --> 00:03:27.930
 igen <c.colorCCCCCC>samme ting </c><c.colorE5E5E5>nu, fordi vi har </c>

00:03:25.830 --> 00:03:32.120
 specificerede <c.colorCCCCCC>CPU'er nul dette </c><c.colorE5E5E5>vil </c><c.colorCCCCCC>bruge </c>

00:03:27.930 --> 00:03:32.120
 <c.colorCCCCCC>otte kerner på denne bestemte </c><c.colorE5E5E5>enhed </c>

00:03:36.569 --> 00:03:41.489
 og giv os bare nogle <c.colorCCCCCC>tal til </c>

00:03:38.310 --> 00:03:44.700
 Sammenlign <c.colorCCCCCC>oh det er den tid, </c><c.colorE5E5E5>det er </c>

00:03:41.489 --> 00:03:46.170
 tid BOGO <c.colorE5E5E5>ops Jeg kigger på </c>

00:03:44.700 --> 00:03:52.980
 <c.colorE5E5E5>helt forkert kolonne se på </c>

00:03:46.170 --> 00:03:57.420
 <c.colorCCCCCC>venstre </c><c.colorE5E5E5>side </c><c.colorCCCCCC>1906 til </c><c.colorE5E5E5>CPU og </c><c.colorCCCCCC>906 </c>

00:03:52.980 --> 00:04:00.840
 tusind for <c.colorE5E5E5>i / o okay hvad gør </c>

00:03:57.420 --> 00:04:06.540
 vi <c.colorE5E5E5>kom her fem tusinde to hundrede </c>

00:04:00.840 --> 00:04:08.549
 og <c.colorE5E5E5>fireogtredive for CPU </c><c.colorCCCCCC>versus 1906 </c>

00:04:06.540 --> 00:04:12.450
 på Raspberry Pi <c.colorE5E5E5>så vi er omkring fem </c>

00:04:08.549 --> 00:04:19.789
 gange <c.colorCCCCCC>Wow </c><c.colorE5E5E5>fire gange hurtigere CPU og i / o </c>

00:04:12.450 --> 00:04:22.199
 vask er 129.000 <c.colorCCCCCC>på Odroid </c><c.colorE5E5E5>og igen </c>

00:04:19.789 --> 00:04:24.810
 <c.colorE5E5E5>hvordan </c><c.colorCCCCCC>syntes </c><c.colorE5E5E5>det, at </c><c.colorCCCCCC>det var ni </c>

00:04:22.199 --> 00:04:27.720
 hundrede <c.colorE5E5E5>og seks tusinde, selv om dette </c>

00:04:24.810 --> 00:04:30.600
 er et <c.colorE5E5E5>andet syn på synk versus i / o </c>

00:04:27.720 --> 00:04:33.060
 <c.colorE5E5E5>de er ikke den samme test, og vi vil have det </c>

00:04:30.600 --> 00:04:35.449
 <c.colorE5E5E5>alt for at være præcis </c><c.colorCCCCCC>side om side </c>

00:04:33.060 --> 00:04:38.100
 sammenlignelige, men vi kan ikke sammenligne <c.colorE5E5E5>det </c>

00:04:35.449 --> 00:04:40.169
 <c.colorE5E5E5>værdi fordi de ikke er </c><c.colorCCCCCC>sammenlignelige </c>

00:04:38.100 --> 00:04:42.599
 værdi, <c.colorE5E5E5>der kunne være en version af stress </c>

00:04:40.169 --> 00:04:45.180
 <c.colorCCCCCC>energi, der giver os en lille smule </c><c.colorE5E5E5>af </c>

00:04:42.599 --> 00:04:48.060
 <c.colorCCCCCC>en afskrækkende værdi, så vi skal se ud </c>

00:04:45.180 --> 00:04:53.280
 på netop CPU'en hvor CPU på 

00:04:48.060 --> 00:04:56.250
 Hindbær Pi <c.colorE5E5E5>kan sammenlignes med en 906 til </c>

00:04:53.280 --> 00:04:59.699
 værdien af <c.colorE5E5E5>fem to tre fire </c><c.colorCCCCCC>på </c>

00:04:56.250 --> 00:05:01.680
 Odroid <c.colorCCCCCC>X u4q så igen ikke videnskabeligt men </c>

00:04:59.699 --> 00:05:04.620
 det giver os <c.colorE5E5E5>en ide om at det handler om fire </c>

00:05:01.680 --> 00:05:07.800
 gange <c.colorCCCCCC>hurtigere </c><c.colorE5E5E5>bare i denne falske </c>

00:05:04.620 --> 00:05:10.169
 opererer <c.colorE5E5E5>i / o ting </c><c.colorCCCCCC>de er </c><c.colorE5E5E5>ikke en </c>

00:05:07.800 --> 00:05:12.949
 sammenlign sammenligning side om side, så vi 

00:05:10.169 --> 00:05:16.169
 kan ikke bruge det <c.colorCCCCCC>nummer, men CPU handler om </c>

00:05:12.949 --> 00:05:18.539
 fire <c.colorCCCCCC>gange hurtigere ok at hoppe tilbage til </c>

00:05:16.169 --> 00:05:22.349
 Raspberry Pi lad os teste netværket 

00:05:18.539 --> 00:05:24.090
 interface nu har jeg en CL 100 fra 

00:05:22.349 --> 00:05:27.690
 logisk forsyning forbundet med det samme 

00:05:24.090 --> 00:05:31.139
 <c.colorCCCCCC>Gigabit Ethernet-switch som begge disse </c>

00:05:27.690 --> 00:05:34.560
 <c.colorE5E5E5>enheder, der kører iperf som en server </c>

00:05:31.139 --> 00:05:36.060
 <c.colorCCCCCC>det betyder, at jeg i bund og grund kan </c><c.colorE5E5E5>sende pakker </c>

00:05:34.560 --> 00:05:39.120
 til det og modtage dem tilbage, og det <c.colorE5E5E5>vil </c>

00:05:36.060 --> 00:05:41.220
 giv <c.colorE5E5E5>mig en benchmark for min netværket </c>

00:05:39.120 --> 00:05:42.930
 <c.colorE5E5E5>hastighed okay så du skal </c><c.colorCCCCCC>have </c><c.colorE5E5E5>en </c>

00:05:41.220 --> 00:05:44.460
 modtagelse af server i den anden <c.colorE5E5E5>ende og den </c>

00:05:42.930 --> 00:05:47.460
 <c.colorE5E5E5>skal </c><c.colorCCCCCC>tilsluttes </c><c.colorE5E5E5>en gigabit-switch </c>

00:05:44.460 --> 00:05:48.910
 <c.colorE5E5E5>Så på Raspberry Pi 3 lad os skrive </c>

00:05:47.460 --> 00:05:52.900
 <c.colorE5E5E5>Iperf </c>

00:05:48.910 --> 00:05:56.380
 - se <c.colorE5E5E5>og IP-adressen til den iperf </c>

00:05:52.900 --> 00:05:58.750
 server som er 192.168.0.1 <c.colorCCCCCC>o1 </c><c.colorE5E5E5>vi er </c>

00:05:56.380 --> 00:06:01.120
 vil køre <c.colorCCCCCC>ti samtidige forbindelser </c>

00:05:58.750 --> 00:06:04.090
 og vi skal køre <c.colorE5E5E5>den i 30 sekunder </c>

00:06:01.120 --> 00:06:06.880
 <c.colorE5E5E5>der går vi nu over </c><c.colorCCCCCC>her </c><c.colorE5E5E5>på den anden </c>

00:06:04.090 --> 00:06:12.270
 enheder odroid <c.colorCCCCCC>xu4 køen </c><c.colorE5E5E5>lad os køre </c>

00:06:06.880 --> 00:06:17.500
 den nøjagtige samme kommando <c.colorCCCCCC>i </c><c.colorE5E5E5>perfektion </c><c.colorCCCCCC>- </c><c.colorE5E5E5>se </c>

00:06:12.270 --> 00:06:19.090
 192.168.0.1 <c.colorCCCCCC>o 1 - </c><c.colorE5E5E5>p 10 - t 30 og varsel </c>

00:06:17.500 --> 00:06:21.220
 <c.colorCCCCCC>Jeg har ikke </c><c.colorE5E5E5>tænkt mig at </c><c.colorCCCCCC>ramme ind, </c><c.colorE5E5E5>indtil </c>

00:06:19.090 --> 00:06:23.320
 <c.colorCCCCCC>hindbær pi </c><c.colorE5E5E5>er færdig, fordi det </c>

00:06:21.220 --> 00:06:26.290
 ville være et urimeligt benchmark på <c.colorCCCCCC>grund af </c>

00:06:23.320 --> 00:06:28.600
 Selvfølgelig er dette ene er <c.colorCCCCCC>allerede </c><c.colorE5E5E5>bruger </c>

00:06:26.290 --> 00:06:29.400
 båndbredde, så vi fik til at gøre dette ved a 

00:06:28.600 --> 00:06:32.200
 tid 

00:06:29.400 --> 00:06:34.210
 hindbær pi skal <c.colorE5E5E5>indpakke deroppe </c>

00:06:32.200 --> 00:06:36.460
 vi går <c.colorCCCCCC>jeg kommer til at </c><c.colorE5E5E5>slå ind </c><c.colorCCCCCC>på </c><c.colorE5E5E5>den anden </c>

00:06:34.210 --> 00:06:40.540
 enheden her og lad det <c.colorE5E5E5>løbe mens vi </c>

00:06:36.460 --> 00:06:42.280
 <c.colorE5E5E5>kig på disse specifikationer så i så fald </c>

00:06:40.540 --> 00:06:45.220
 dybest set, hvad vi ser der <c.colorE5E5E5>er </c>

00:06:42.280 --> 00:06:46.960
 båndbredde <c.colorE5E5E5>megabit per sekund </c><c.colorCCCCCC>på alle 10 </c>

00:06:45.220 --> 00:06:49.930
 forbindelser og derefter resuméet på 

00:06:46.960 --> 00:06:52.660
 <c.colorCCCCCC>ende som er et gennemsnit over 30 sekunder </c>

00:06:49.930 --> 00:06:55.870
 så vi <c.colorE5E5E5>får nittito fire point </c><c.colorCCCCCC>to </c>

00:06:52.660 --> 00:06:58.360
 megabitter <c.colorE5E5E5>per sekund nu med 100 </c>

00:06:55.870 --> 00:07:00.820
 megabit Ethernet adapter i en <c.colorCCCCCC>Raspberry </c>

00:06:58.360 --> 00:07:04.750
 <c.colorCCCCCC>Pi </c><c.colorE5E5E5>3, der er ret signifikant, det er 92 </c>

00:07:00.820 --> 00:07:07.110
 <c.colorE5E5E5>procent af dens samlede lovede hastighed er </c>

00:07:04.750 --> 00:07:11.350
 <c.colorCCCCCC>opnås, så det er ret godt </c>

00:07:07.110 --> 00:07:16.420
 <c.colorE5E5E5>hoppe </c><c.colorCCCCCC>over til </c><c.colorE5E5E5>den gamle Droid X u4q den </c>

00:07:11.350 --> 00:07:18.730
 gennemsnittet er 926 megabit per sekund så 

00:07:16.420 --> 00:07:22.090
 igen får vi <c.colorCCCCCC>ca. </c><c.colorE5E5E5>92% </c><c.colorCCCCCC>af </c>

00:07:18.730 --> 00:07:26.320
 lovede <c.colorE5E5E5>hastighed, </c><c.colorCCCCCC>men i dette </c><c.colorE5E5E5>tilfælde har vi </c>

00:07:22.090 --> 00:07:29.440
 <c.colorE5E5E5>Gigabit Ethernet </c><c.colorCCCCCC>så hastigheden af </c>

00:07:26.320 --> 00:07:34.450
 Ethernet-forbindelse <c.colorCCCCCC>er ca. </c><c.colorE5E5E5>10 gange </c>

00:07:29.440 --> 00:07:37.030
 hurtigere på <c.colorE5E5E5>Odroid </c><c.colorCCCCCC>X u4q derefter på </c>

00:07:34.450 --> 00:07:38.730
 Hindbær Pi 3 så hvis du bruger dette 

00:07:37.030 --> 00:07:41.290
 <c.colorCCCCCC>for en server, hvis du </c><c.colorE5E5E5>bruger dette til </c>

00:07:38.730 --> 00:07:43.510
 som kører en røv boks eller <c.colorE5E5E5>noget lignende </c>

00:07:41.290 --> 00:07:46.060
 at <c.colorE5E5E5>dette helt sikkert bliver den </c>

00:07:43.510 --> 00:07:47.610
 PI dræber sikkert <c.colorE5E5E5>så vidt det går </c>

00:07:46.060 --> 00:07:50.500
 <c.colorE5E5E5>en anden grund du ville have </c><c.colorCCCCCC>det </c>

00:07:47.610 --> 00:07:52.240
 hurtigere netværksforbindelse <c.colorE5E5E5>Plex-servere </c>

00:07:50.500 --> 00:07:54.850
 <c.colorCCCCCC>mm-hmm hvis du vil gøre </c><c.colorE5E5E5>multimedie </c>

00:07:52.240 --> 00:07:56.950
 streaming <c.colorCCCCCC>den slags ting, der er meget </c>

00:07:54.850 --> 00:07:58.690
 meget <c.colorE5E5E5>hurtigere </c><c.colorCCCCCC>den endelige </c><c.colorE5E5E5>test, at vi er </c>

00:07:56.950 --> 00:08:01.360
 Går her Becca <c.colorE5E5E5>fordi </c><c.colorCCCCCC>jeg ved det her </c>

00:07:58.690 --> 00:08:02.150
 <c.colorE5E5E5>løber ind i geekeryet ud over </c>

00:08:01.360 --> 00:08:04.310
 måle 

00:08:02.150 --> 00:08:07.490
 men vi måler <c.colorCCCCCC>det, lad os ikke bekymre os </c>

00:08:04.310 --> 00:08:09.670
 geekery er høj med denne ene <c.colorCCCCCC>okay så videre </c>

00:08:07.490 --> 00:08:13.700
 hvert af <c.colorCCCCCC>disse </c><c.colorE5E5E5>systemer, jeg har installeret </c>

00:08:09.670 --> 00:08:18.590
 <c.colorCCCCCC>cat5 tv minearbejdere </c><c.colorE5E5E5>kan du finde det på vores </c>

00:08:13.700 --> 00:08:22.940
 github cap cap <c.colorCCCCCC>5 </c><c.colorE5E5E5>tv på github </c><c.colorCCCCCC>der er en </c>

00:08:18.590 --> 00:08:25.370
 <c.colorCCCCCC>ansøgning kaldet </c><c.colorE5E5E5>cap 5 tv - minearbejdere og </c>

00:08:22.940 --> 00:08:28.070
 vi skal min <c.colorCCCCCC>monaro </c><c.colorE5E5E5>med hver af </c>

00:08:25.370 --> 00:08:29.750
 disse brædder <c.colorE5E5E5>så lad os se hvor mange </c>

00:08:28.070 --> 00:08:32.420
 hashes per sekund hver af disse kan gøre 

00:08:29.750 --> 00:08:35.480
 så på hvert system <c.colorE5E5E5>har jeg allerede det </c>

00:08:32.420 --> 00:08:37.070
 <c.colorCCCCCC>installeret dette </c><c.colorE5E5E5>er Raspberry Pi 3 jeg er </c>

00:08:35.480 --> 00:08:40.280
 Lad det <c.colorE5E5E5>forbinde og </c><c.colorCCCCCC>få et par </c>

00:08:37.070 --> 00:08:42.230
 af job <c.colorE5E5E5>fra poolen </c><c.colorCCCCCC>og </c><c.colorE5E5E5>her på </c>

00:08:40.280 --> 00:08:43.690
 Odroid xu4 vi skal gøre det samme 

00:08:42.230 --> 00:08:47.480
 <c.colorE5E5E5>ting </c>

00:08:43.690 --> 00:08:49.760
 <c.colorCCCCCC>mineiro </c><c.colorE5E5E5>og vi vil lade det forbinde </c>

00:08:47.480 --> 00:08:51.860
 <c.colorE5E5E5>og tag fat </c><c.colorCCCCCC>i puljen nu </c><c.colorE5E5E5>ser det ud </c>

00:08:49.760 --> 00:08:54.440
 de <c.colorE5E5E5>forbinder begge til hashvalv </c>

00:08:51.860 --> 00:08:57.320
 <c.colorE5E5E5>ja så vi har den samme pool, </c><c.colorCCCCCC>vi har </c>

00:08:54.440 --> 00:08:59.330
 fik samme <c.colorCCCCCC>ansøgning det samme </c>

00:08:57.320 --> 00:09:01.790
 version <c.colorE5E5E5>alt er nøjagtigt </c><c.colorCCCCCC>det samme </c>

00:08:59.330 --> 00:09:03.440
 mellem <c.colorE5E5E5>dem </c><c.colorCCCCCC>bare </c><c.colorE5E5E5>forskellige hardware </c><c.colorCCCCCC>så </c>

00:09:01.790 --> 00:09:06.050
 dette er <c.colorCCCCCC>hindbær pi </c><c.colorE5E5E5>3 vi har to </c>

00:09:03.440 --> 00:09:09.560
 job ser ud som om <c.colorE5E5E5>jeg bare venter på nogen </c>

00:09:06.050 --> 00:09:12.230
 hashes pr. sekund rapporteres <c.colorE5E5E5>samme </c>

00:09:09.560 --> 00:09:14.120
 med Odroid <c.colorCCCCCC>xu4 køen venter lige </c>

00:09:12.230 --> 00:09:15.650
 <c.colorCCCCCC>for enhver form for rapport </c><c.colorE5E5E5>så vidt som hvordan </c>

00:09:14.120 --> 00:09:19.630
 mange hash per sekund, vi får 

00:09:15.650 --> 00:09:19.630
 det kan <c.colorE5E5E5>tage et øjeblik </c>

00:09:20.170 --> 00:09:25.130
 Vi benytter lejligheden lige <c.colorCCCCCC>til </c>

00:09:22.490 --> 00:09:27.410
 nævne <c.colorE5E5E5>lidt </c><c.colorCCCCCC>om </c><c.colorE5E5E5>cap 5 </c><c.colorCCCCCC>tv - </c>

00:09:25.130 --> 00:09:30.410
 <c.colorE5E5E5>minearbejdere, der er en cool måde, </c><c.colorCCCCCC>du kan </c>

00:09:27.410 --> 00:09:31.880
 støtte <c.colorE5E5E5>kategori 5 tv-netværk </c><c.colorCCCCCC>fordi </c>

00:09:30.410 --> 00:09:34.940
 Du kan installere dette på din <c.colorCCCCCC>computer </c>

00:09:31.880 --> 00:09:37.250
 din SBC på hvad som helst <c.colorE5E5E5>og når du ikke er det </c>

00:09:34.940 --> 00:09:40.490
 <c.colorE5E5E5>ved hjælp af disse </c><c.colorCCCCCC>enheder vil det min monaro </c>

00:09:37.250 --> 00:09:42.320
 og deponere det til kategori 5 tv <c.colorE5E5E5>så det er </c>

00:09:40.490 --> 00:09:44.450
 en rigtig <c.colorCCCCCC>interessant måde for dig at </c><c.colorE5E5E5>være </c>

00:09:42.320 --> 00:09:46.730
 kunne <c.colorE5E5E5>støtte showene her på </c>

00:09:44.450 --> 00:09:49.670
 kategori 5, mens de ikke <c.colorE5E5E5>rent faktisk bruger </c>

00:09:46.730 --> 00:09:52.640
 <c.colorE5E5E5>andet end blot at bruge din </c>

00:09:49.670 --> 00:09:54.680
 hardware og og muligvis elektricitet 

00:09:52.640 --> 00:09:56.180
 <c.colorE5E5E5>du ved måske, at støde på </c><c.colorCCCCCC>strømmen </c>

00:09:54.680 --> 00:09:59.150
 Regning lidt, <c.colorE5E5E5>hvis </c><c.colorCCCCCC>du er, hvis du har </c>

00:09:56.180 --> 00:10:01.430
 fik en <c.colorCCCCCC>supercomputer og det ville tage en </c>

00:09:59.150 --> 00:10:02.780
 virkelig <c.colorCCCCCC>stærk </c><c.colorE5E5E5>med SBC det er det ikke </c>

00:10:01.430 --> 00:10:04.790
 bliver et problem, <c.colorCCCCCC>du bliver </c><c.colorE5E5E5>ikke </c>

00:10:02.780 --> 00:10:07.420
 <c.colorE5E5E5>kører meget, så det er hindbær </c>

00:10:04.790 --> 00:10:10.640
 <c.colorE5E5E5>Pi vi får 8,2 hash per sekund </c>

00:10:07.420 --> 00:10:13.970
 8,2 hash per sekund er det ikke <c.colorE5E5E5>høj </c><c.colorCCCCCC>men </c>

00:10:10.640 --> 00:10:15.980
 det er noget over på <c.colorE5E5E5>Odroid </c><c.colorCCCCCC>x u4q </c>

00:10:13.970 --> 00:10:18.680
 vi får <c.colorCCCCCC>20 </c>

00:10:15.980 --> 00:10:22.880
 <c.colorCCCCCC>fem point syv hashes per sekund igen </c>

00:10:18.680 --> 00:10:24.710
 <c.colorCCCCCC>et betydeligt spring </c><c.colorE5E5E5>i præstationen, når </c>

00:10:22.880 --> 00:10:26.240
 <c.colorE5E5E5>det kommer til at </c><c.colorCCCCCC>overskrive </c><c.colorE5E5E5>Xu for Q </c><c.colorCCCCCC>så hvis </c>

00:10:24.710 --> 00:10:27.260
 du så <c.colorE5E5E5>på at bruge et </c><c.colorCCCCCC>SPC til </c>

00:10:26.240 --> 00:10:29.450
 <c.colorCCCCCC>minedrift </c>

00:10:27.260 --> 00:10:31.250
 dette er CPU-minedrift tildelt, <c.colorE5E5E5>så vi ikke er det </c>

00:10:29.450 --> 00:10:33.710
 ved hjælp af <c.colorE5E5E5>GPU minedrift her fordi </c>

00:10:31.250 --> 00:10:35.750
 Hindbær Pi 3 ville bare ikke kunne 

00:10:33.710 --> 00:10:38.150
 <c.colorE5E5E5>håndtere det så med CPU minedrift vi er </c>

00:10:35.750 --> 00:10:43.190
 Få <c.colorE5E5E5>omkring </c><c.colorCCCCCC>8 på Raspberry Pi 3 </c>

00:10:38.150 --> 00:10:46.700
 <c.colorE5E5E5>og omkring 23 sagde jeg på Xu for 25 </c>

00:10:43.190 --> 00:10:50.630
 næsten <c.colorE5E5E5>26 og der er Raspberry Pi 3 </c>

00:10:46.700 --> 00:10:54.410
 det er gået ned til <c.colorCCCCCC>77,7 Odroid er </c>

00:10:50.630 --> 00:10:57.470
 holder sin egen 24,7 <c.colorE5E5E5>så helt sikkert </c>

00:10:54.410 --> 00:11:00.690
 <c.colorE5E5E5>få bedre hash sats på det </c>

00:10:57.470 --> 00:11:00.690
 [Musik] 

00:11:02.649 --> 00:11:07.420
 du 

00:11:03.730 --> 00:11:09.500
 [Musik] 

00:11:07.420 --> 00:11:13.049
 [Bifald] 

00:11:09.500 --> 00:11:13.049
 [Musik] 

00:11:15.900 --> 00:11:19.510
 [Musik] 

